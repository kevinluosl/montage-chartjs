montageDefine("272500d","listen/range-changes",{dependencies:["weak-map","../dict"],factory:function(e,t,n){"use strict";function i(){throw Error("Can't construct. RangeChanges is a mixin.")}var a=e("weak-map"),r=e("../dict"),s=new a;n.exports=i,i.prototype.getAllRangeChangeDescriptors=function(){return s.has(this)||s.set(this,r()),s.get(this)},i.prototype.getRangeChangeDescriptor=function(e){var t=this.getAllRangeChangeDescriptors();return e=e||"",t.has(e)||t.set(e,{isActive:!1,changeListeners:[],willChangeListeners:[]}),t.get(e)},i.prototype.addRangeChangeListener=function(e,t,n){!this.isObservable&&this.makeObservable&&this.makeObservable();var i,a=this.getRangeChangeDescriptor(t);i=n?a.willChangeListeners:a.changeListeners,i.push(e),Object.defineProperty(this,"dispatchesRangeChanges",{value:!0,writable:!0,configurable:!0,enumerable:!1});var r=this;return function(){r&&(r.removeRangeChangeListener(e,t,n),r=null)}},i.prototype.removeRangeChangeListener=function(e,t,n){var i,a=this.getRangeChangeDescriptor(t);i=n?a.willChangeListeners:a.changeListeners;var r=i.lastIndexOf(e);if(-1===r)throw Error("Can't remove range change listener: does not exist: token "+JSON.stringify(t));i.splice(r,1)},i.prototype.dispatchRangeChange=function(e,t,n,i){var a=this.getAllRangeChangeDescriptors(),r="Range"+(i?"WillChange":"Change");a.forEach(function(a,s){if(!a.isActive){a.isActive=!0;var o;o=i?a.willChangeListeners:a.changeListeners;var l="handle"+(s.slice(0,1).toUpperCase()+s.slice(1))+r;try{o.slice().forEach(function(a){if(!(0>o.indexOf(a)))if(a[l])a[l](e,t,n,this,i);else{if(!a.call)throw Error("Handler "+a+" has no method "+l+" and is not callable");a.call(this,e,t,n,this,i)}},this)}finally{a.isActive=!1}}},this)},i.prototype.addBeforeRangeChangeListener=function(e,t){return this.addRangeChangeListener(e,t,!0)},i.prototype.removeBeforeRangeChangeListener=function(e,t){return this.removeRangeChangeListener(e,t,!0)},i.prototype.dispatchBeforeRangeChange=function(e,t,n){return this.dispatchRangeChange(e,t,n,!0)}}});