"use strict";var Montage=require("../core").Montage,Promise=require("../promise").Promise,RemoteReference=require("./remote-reference").RemoteReference,BinderModule=require("./binder"),logger=require("../logger").logger("blueprint");exports.BinderReference=RemoteReference.create(RemoteReference,{constructor:{value:function(){this.superForValue("constructor")()}},identifier:{get:function(){return this._reference||(this._reference=this.referenceFromValue(this._value)),["binder",this._reference.binderName.toLowerCase(),"reference"].join("_")}},valueFromReference:{value:function(t,e){var n=t.binderName,i=t.binderModuleId,a=Promise.defer(),s=BinderModule.Binder.manager.binderForName(n);if(s)a.resolve(s);else try{var r=e,o=i.indexOf("/");if(o>0){var l=i.substring(0,o),c=e.mappings;l in c&&(i=i.substring(o+1),r=r.getPackage(c[l].location))}a=BinderModule.Binder.getBinderWithModuleId(i,r)}catch(h){a.reject(Error("Error cannot find Blueprint Binder "+i))}return a.promise}},referenceFromValue:{value:function(t){var e={};return e.binderName=t.name,e.binderModuleId=t.binderModuleId,e}}});